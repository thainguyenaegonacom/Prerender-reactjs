{"version":3,"sources":["images/icons/ic-arrow-right.svg","components/BlockBlogs/ItemArticle.tsx","components/BlockBlogs/index.tsx"],"names":["ItemArticle","articleItem","useState","isHover","setHover","image","setImage","refSquare","useRef","handleHoverItem","useEffect","current","featured_image","width","clientHeight","height","className","ref","onMouseEnter","onMouseLeave","to","link","relative_url","Picture","data","isMobile","style","position","zIndex","title","src","icArrow","alt","map","tags","item","index","name","BlockBlogs","blogList"],"mappings":"gIAAe,MAA0B,2C,uCC4E1BA,IApEf,YAA6D,IAAtCC,EAAqC,EAArCA,YACrB,EAA4BC,oBAAkB,GAA9C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAc,IAAxC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAYC,iBAAY,MAExBC,EAAkB,WACtBL,GAAUD,IAYZ,OATAO,qBAAU,WACJH,GAAaA,EAAUI,SACzBL,EAAS,2BAAD,OACHL,QADG,IACHA,OADG,EACHA,EAAaW,gBADV,IAENC,MAAON,EAAUI,QAAQG,aACzBC,OAAQR,EAAUI,QAAQG,kBAG7B,CAACb,IAEF,qCACE,qBAAKe,UAAU,iBAAiBC,IAAKV,EAArC,SACE,eAAC,IAAD,CACES,UAAS,2BAAsBb,EAAU,WAAa,IAEtDe,aAAcT,EACdU,aAAcV,EACdW,GAAE,eAAUnB,EAAYoB,KAAKC,cAL/B,UAOE,cAACC,EAAA,QAAD,CAASC,KAAMnB,IACboB,IAUA,GATA,qBAAKT,UAAU,UAAf,SACE,sBAAKU,MAAO,CAAEC,SAAU,WAAYC,OAAQ,GAA5C,UACE,6BAAK3B,EAAY4B,QACjB,4BACE,qBAAKC,IAAKC,EAASC,IAAI,iBASlCP,IACC,qBAAKT,UAAU,iBAAf,SACE,qBAAKU,MAAO,CAAEC,SAAU,WAAYC,OAAQ,GAA5C,SACE,6BAAK3B,EAAY4B,YAIrB,GAEF,sBAAKb,UAAU,WAAf,UACE,0CACCiB,cAAG,OAAChC,QAAD,IAACA,OAAD,EAACA,EAAaiC,MAAM,SAACC,EAAWC,GAAZ,OACtB,cAAC,IAAD,CAAMhB,GAAE,6BAAiBe,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAME,MAA/B,gBACGF,QADH,IACGA,OADH,EACGA,EAAME,MADmCD,c,iCC/DtD,gDA8BeE,UAxBf,YAA4E,IAAtDC,EAAqD,EAArDA,SAAUV,EAA2C,EAA3CA,MAC9B,OACE,0BAASb,UAAU,gBAAnB,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,SAA6Ba,IAC7B,qBAAKb,UAAU,mBAAf,SACGuB,EAASN,KAAI,SAACE,EAAWC,GAAZ,OACZ,qBAAKpB,UAAS,0BAAqBS,IAAW,iBAAmB,IAAjE,SACE,cAAC,IAAD,CAAaxB,YAAakC,KADgDC,WAMlF,cAAC,IAAD,CAAMhB,GAAG,QAAQJ,UAAU,cAA3B","file":"static/js/4.448022e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ic-arrow-right.d20b5ae2.svg\";","import React, { useEffect, useRef, useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport icArrow from '../../images/icons/ic-arrow-right.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { map } from 'lodash';\r\nimport { isMobile } from '../../DetectScreen';\r\nimport Picture from '../Picture';\r\n\r\nfunction ItemArticle({ articleItem }: { articleItem: any }) {\r\n  const [isHover, setHover] = useState<boolean>(false);\r\n  const [image, setImage] = useState<any>({});\r\n  const refSquare = useRef<any>(null);\r\n\r\n  const handleHoverItem = () => {\r\n    setHover(!isHover);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refSquare && refSquare.current) {\r\n      setImage({\r\n        ...articleItem?.featured_image,\r\n        width: refSquare.current.clientHeight,\r\n        height: refSquare.current.clientHeight,\r\n      });\r\n    }\r\n  }, [articleItem]);\r\n  return (\r\n    <>\r\n      <div className=\"section-square\" ref={refSquare}>\r\n        <Link\r\n          className={`article-item-box ${isHover ? 'on-hover' : ''}`}\r\n          // style={{ backgroundImage: `url(${articleItem?.featured_image.original})` }}\r\n          onMouseEnter={handleHoverItem}\r\n          onMouseLeave={handleHoverItem}\r\n          to={`/blog${articleItem.link.relative_url}`}\r\n        >\r\n          <Picture data={image} />\r\n          {!isMobile ? (\r\n            <div className=\"content\">\r\n              <div style={{ position: 'relative', zIndex: 1 }}>\r\n                <h4>{articleItem.title}</h4>\r\n                <p>\r\n                  <img src={icArrow} alt=\"\" />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </Link>\r\n      </div>\r\n      {isMobile ? (\r\n        <div className=\"content-mobile\">\r\n          <div style={{ position: 'relative', zIndex: 1 }}>\r\n            <h4>{articleItem.title}</h4>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className=\"tags-box\">\r\n        <span>Tags: </span>\r\n        {map(articleItem?.tags, (item: any, index: any) => (\r\n          <Link to={`/blogs/tags/${item?.name}`} key={index}>\r\n            {item?.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// itemProduct.propTypes = {\r\n//   productItem: PropTypes.object.isRequired,\r\n// };\r\n\r\nexport default ItemArticle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ItemArticle from './ItemArticle';\r\nimport { Link } from 'react-router-dom';\r\nimport { isMobile } from '../../DetectScreen';\r\n\r\nfunction BlockBlogs({ blogList, title }: { blogList: any; title: string }) {\r\n  return (\r\n    <section className=\"blk-blog-list\">\r\n      <div className=\"container\">\r\n        <h3 className=\"title-block\">{title}</h3>\r\n        <div className=\"row list-article\">\r\n          {blogList.map((item: any, index: number) => (\r\n            <div className={`col-12 col-md-4 ${isMobile ? 'wrapper-mobile' : ''}`} key={index}>\r\n              <ItemArticle articleItem={item} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Link to=\"/blog\" className=\"btn-see-all\">\r\n        see all our blog posts\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\nBlockBlogs.propTypes = {\r\n  blogList: PropTypes.array,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default BlockBlogs;\r\n"],"sourceRoot":""}