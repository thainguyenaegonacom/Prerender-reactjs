{"version":3,"sources":["components/CarouselVideo/index.tsx","components/BlockCarousel/index.tsx"],"names":["CarouselVideo","width","src","type","link","muted","autoplay","loop","videoPreview","className","style","height","isMobile","autoPlay","to","memo","Carousel","slides","dragOrAuto","maxWidth","maxHeight","hasText","useState","indexSlide","setIndexSlide","productLinks","setProductLinks","useEffect","a","routeProductPage","routes","find","route","name","path","pending","productLinkArr","length","forEach","slide","i","product","obj","index","productLink","push","options","url","GET_PRODUCT_DETAIL","id","method","body","fetchClient","Promise","all","replace","brand_page","page_ptr","slug","handle","fetch","sliderHeight","isTablet","window","innerHeight","Slider","onSlideComplete","activeIndex","threshHold","transition","scaleOnDrag","isSquare","slideInterval","map","item","x","href","full_url","video","Picture","data","background","text","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/51.f9338d7b.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nexport interface ICarouselVideo {\r\n  width?: string;\r\n  src: string;\r\n  type: string;\r\n  link?: string;\r\n  muted?: boolean;\r\n  autoplay?: boolean;\r\n  loop?: boolean;\r\n}\r\n\r\nfunction CarouselVideo({\r\n  width = '100%',\r\n  src,\r\n  type,\r\n  link,\r\n  muted = true,\r\n  autoplay = true,\r\n  loop = true,\r\n}: ICarouselVideo) {\r\n  const videoPreview = () => {\r\n    return (\r\n      <div className=\"video-wrapper\">\r\n        <video\r\n          style={{\r\n            width: width,\r\n            height: isMobile ? 'auto' : '100%',\r\n          }}\r\n          className=\"video-preview\"\r\n          muted={muted}\r\n          autoPlay={autoplay}\r\n          loop={loop}\r\n        >\r\n          <source src={src} type={type} />\r\n        </video>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (link) {\r\n    return <Link to={link}>{videoPreview()}</Link>;\r\n  } else {\r\n    {\r\n      return videoPreview();\r\n    }\r\n  }\r\n}\r\n\r\nCarouselVideo.propTypes = {\r\n  item: PropTypes.object,\r\n};\r\n\r\nexport default memo(CarouselVideo);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport Picture from '../Picture';\r\nimport Slider from '../Slider';\r\nimport { isMobile, isTablet } from '../../DetectScreen';\r\nimport CarouselVideo from '../CarouselVideo';\r\nimport { fetchClient } from '../../redux/Helpers';\r\nimport { GET_PRODUCT_DETAIL } from '../../config';\r\nimport routes from '../../routes/routeModel';\r\n\r\nfunction Carousel({\r\n  slides,\r\n  dragOrAuto = false,\r\n  maxWidth,\r\n  maxHeight,\r\n  hasText = false,\r\n}: {\r\n  slides: any;\r\n  dragOrAuto: boolean;\r\n  maxWidth?: string;\r\n  maxHeight?: string;\r\n  hasText?: boolean;\r\n}): JSX.Element {\r\n  const [indexSlide, setIndexSlide] = useState(0);\r\n  const [productLinks, setProductLinks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const routeProductPage: any = routes?.find(\r\n        (route) => route.name == 'Product Detail Page',\r\n      )?.path;\r\n      const pending: any = [];\r\n      const productLinkArr: any = [];\r\n      if (slides?.length > 0) {\r\n        slides.forEach((slide: any, i: any) => {\r\n          if (slide?.product) {\r\n            const obj: any = {};\r\n            obj.index = i;\r\n            obj.productLink = slide?.product;\r\n            productLinkArr.push(obj);\r\n            const options = {\r\n              url: `${GET_PRODUCT_DETAIL}${slide?.product?.id}/`,\r\n              method: 'GET',\r\n              body: null,\r\n            };\r\n            pending.push(fetchClient(options));\r\n          }\r\n        });\r\n      }\r\n      try {\r\n        const productLinks: any = [];\r\n        const results = await Promise.all(pending);\r\n        results.forEach((product: any) => {\r\n          const obj: any = {};\r\n          obj.id = product.id;\r\n          obj.url = routeProductPage\r\n            .replace(':IDBrand', product?.brand_page?.page_ptr?.slug)\r\n            .replace(':IDProduct', product.handle);\r\n          productLinks.push(obj);\r\n        });\r\n        setProductLinks(productLinks);\r\n      } catch {}\r\n    }\r\n\r\n    fetch();\r\n  }, [slides]);\r\n\r\n  const sliderHeight = isTablet ? 135 : isMobile ? 120 : window.innerHeight - 192;\r\n  const defaultHeight = 737; // max-height applied for large screen;\r\n\r\n  return (\r\n    <section className=\"blk-carousel\">\r\n      <div\r\n        className={`carousel-block ${hasText && 'has-text'}`}\r\n        style={{\r\n          maxWidth: maxWidth ? `${maxWidth}px` : '',\r\n          maxHeight: (sliderHeight > defaultHeight ? defaultHeight : sliderHeight) + 'px',\r\n          height: sliderHeight,\r\n        }}\r\n      >\r\n        <Slider\r\n          onSlideComplete={setIndexSlide}\r\n          // onSlideStart={(i) => {\r\n          //   console.log('started dragging on slide', i);\r\n          // }}\r\n          activeIndex={indexSlide}\r\n          threshHold={isMobile ? 100 : 500}\r\n          transition={isMobile ? 0.2 : 0.8}\r\n          scaleOnDrag={false}\r\n          isSquare={false}\r\n          dragOrAuto={dragOrAuto}\r\n          slideInterval={5000}\r\n        >\r\n          {slides.map((item: any, index: number) => {\r\n            const productLink: any = productLinks?.find(\r\n              (x: any) => x?.id == item?.product?.id,\r\n            );\r\n            return (\r\n              <div key={index} className=\"animated faster fadeIn\">\r\n                {dragOrAuto ? (\r\n                  <a\r\n                    className=\"nav-link-full-img\"\r\n                    href={\r\n                      item?.link ? item?.link?.full_url : productLink ? productLink?.url : ''\r\n                    }\r\n                  ></a>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.video && item.video.src.length ? (\r\n                  <CarouselVideo src={item.video.src[0].src} type={item.video.src[0].type} />\r\n                ) : (\r\n                  <Picture\r\n                    data={{ ...item.background, maxHeight: maxHeight, maxWidth: maxWidth }}\r\n                  />\r\n                )}\r\n                {item?.text ? (\r\n                  <div\r\n                    className=\"content-slide\"\r\n                    dangerouslySetInnerHTML={{ __html: item?.text }}\r\n                  ></div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default memo(Carousel);\r\n"],"sourceRoot":""}