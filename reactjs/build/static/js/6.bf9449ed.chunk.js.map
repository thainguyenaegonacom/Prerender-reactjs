{"version":3,"sources":["components/CarouselVideo/index.tsx","components/BlockCarousel/index.tsx","components/Slider/Slide.tsx","components/Slider/index.tsx"],"names":["CarouselVideo","width","src","type","link","muted","autoplay","loop","videoPreview","className","style","height","isMobile","autoPlay","to","memo","Carousel","slides","dragOrAuto","maxWidth","maxHeight","hasText","useState","indexSlide","setIndexSlide","productLinks","setProductLinks","useEffect","a","routeProductPage","routes","find","route","name","path","pending","productLinkArr","length","forEach","slide","i","product","obj","index","productLink","push","options","url","GET_PRODUCT_DETAIL","id","method","body","fetchClient","Promise","all","replace","brand_page","page_ptr","slug","handle","fetch","sliderHeight","isTablet","window","innerHeight","Slider","onSlideComplete","activeIndex","threshHold","transition","scaleOnDrag","isSquare","slideInterval","map","item","x","href","full_url","video","Picture","data","background","text","dangerouslySetInnerHTML","__html","Slide","child","sliderWidth","isSquareWrapper","slideRef","useRef","onMouseDown","current","transform","onMouseUp","ref","clientWidth","unselectable","onTouchStart","onTouchEnd","onMouseLeave","onDragStart","e","preventDefault","stopPropagation","getPositionX","event","includes","pageX","touches","clientX","getElementDimensions","clientHeight","children","onSlideStart","dimensions","setDimensions","dragging","startPos","currentTranslate","prevTranslate","currentIndex","sliderRef","animationRef","btnDotClick","setBtnDotClick","setPositionByIndex","useCallback","w","setSliderPosition","transitionOn","touchStart","requestAnimationFrame","animation","cursor","touchMove","currentPosition","touchEnd","cancelAnimationFrame","movedBy","useLayoutEffect","elementDimensions","intervalCheckWidth","setInterval","clearInterval","handleResize","handleKeyDown","key","arrowsPressed","addEventListener","removeEventListener","setIndexTransitionInterval","keyIndexInterval","error","auto","setTimeout","clearTimeout","onContextMenu","Array","from","keys","onClick","onTouchMove","onMouseMove"],"mappings":"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","file":"static/js/6.bf9449ed.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nexport interface ICarouselVideo {\r\n  width?: string;\r\n  src: string;\r\n  type: string;\r\n  link?: string;\r\n  muted?: boolean;\r\n  autoplay?: boolean;\r\n  loop?: boolean;\r\n}\r\n\r\nfunction CarouselVideo({\r\n  width = '100%',\r\n  src,\r\n  type,\r\n  link,\r\n  muted = true,\r\n  autoplay = true,\r\n  loop = true,\r\n}: ICarouselVideo) {\r\n  const videoPreview = () => {\r\n    return (\r\n      <div className=\"video-wrapper\">\r\n        <video\r\n          style={{\r\n            width: width,\r\n            height: isMobile ? 'auto' : '100%',\r\n          }}\r\n          className=\"video-preview\"\r\n          muted={muted}\r\n          autoPlay={autoplay}\r\n          loop={loop}\r\n        >\r\n          <source src={src} type={type} />\r\n        </video>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (link) {\r\n    return <Link to={link}>{videoPreview()}</Link>;\r\n  } else {\r\n    {\r\n      return videoPreview();\r\n    }\r\n  }\r\n}\r\n\r\nCarouselVideo.propTypes = {\r\n  item: PropTypes.object,\r\n};\r\n\r\nexport default memo(CarouselVideo);\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport Picture from '../Picture';\r\nimport Slider from '../Slider';\r\nimport { isMobile, isTablet } from '../../DetectScreen';\r\nimport CarouselVideo from '../CarouselVideo';\r\nimport { fetchClient } from '../../redux/Helpers';\r\nimport { GET_PRODUCT_DETAIL } from '../../config';\r\nimport routes from '../../routes/routeModel';\r\n\r\nfunction Carousel({\r\n  slides,\r\n  dragOrAuto = false,\r\n  maxWidth,\r\n  maxHeight,\r\n  hasText = false,\r\n}: {\r\n  slides: any;\r\n  dragOrAuto: boolean;\r\n  maxWidth?: string;\r\n  maxHeight?: string;\r\n  hasText?: boolean;\r\n}): JSX.Element {\r\n  const [indexSlide, setIndexSlide] = useState(0);\r\n  const [productLinks, setProductLinks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const routeProductPage: any = routes?.find(\r\n        (route) => route.name == 'Product Detail Page',\r\n      )?.path;\r\n      const pending: any = [];\r\n      const productLinkArr: any = [];\r\n      if (slides?.length > 0) {\r\n        slides.forEach((slide: any, i: any) => {\r\n          if (slide?.product) {\r\n            const obj: any = {};\r\n            obj.index = i;\r\n            obj.productLink = slide?.product;\r\n            productLinkArr.push(obj);\r\n            const options = {\r\n              url: `${GET_PRODUCT_DETAIL}${slide?.product?.id}/`,\r\n              method: 'GET',\r\n              body: null,\r\n            };\r\n            pending.push(fetchClient(options));\r\n          }\r\n        });\r\n      }\r\n      try {\r\n        const productLinks: any = [];\r\n        const results = await Promise.all(pending);\r\n        results.forEach((product: any) => {\r\n          const obj: any = {};\r\n          obj.id = product.id;\r\n          obj.url = routeProductPage\r\n            .replace(':IDBrand', product?.brand_page?.page_ptr?.slug)\r\n            .replace(':IDProduct', product.handle);\r\n          productLinks.push(obj);\r\n        });\r\n        setProductLinks(productLinks);\r\n      } catch {}\r\n    }\r\n\r\n    fetch();\r\n  }, [slides]);\r\n\r\n  const sliderHeight = isTablet ? 135 : isMobile ? 120 : window.innerHeight - 192;\r\n  const defaultHeight = 737; // max-height applied for large screen;\r\n\r\n  return (\r\n    <section className=\"blk-carousel\">\r\n      <div\r\n        className={`carousel-block ${hasText && 'has-text'}`}\r\n        style={{\r\n          maxWidth: maxWidth ? `${maxWidth}px` : '',\r\n          maxHeight: (sliderHeight > defaultHeight ? defaultHeight : sliderHeight) + 'px',\r\n          height: sliderHeight,\r\n        }}\r\n      >\r\n        <Slider\r\n          onSlideComplete={setIndexSlide}\r\n          // onSlideStart={(i) => {\r\n          //   console.log('started dragging on slide', i);\r\n          // }}\r\n          activeIndex={indexSlide}\r\n          threshHold={isMobile ? 100 : 500}\r\n          transition={isMobile ? 0.2 : 0.8}\r\n          scaleOnDrag={false}\r\n          isSquare={false}\r\n          dragOrAuto={dragOrAuto}\r\n          slideInterval={5000}\r\n        >\r\n          {slides.map((item: any, index: number) => {\r\n            const productLink: any = productLinks?.find(\r\n              (x: any) => x?.id == item?.product?.id,\r\n            );\r\n            return (\r\n              <div key={index} className=\"animated faster fadeIn\">\r\n                {dragOrAuto ? (\r\n                  <a\r\n                    className=\"nav-link-full-img\"\r\n                    href={\r\n                      item?.link ? item?.link?.full_url : productLink ? productLink?.url : ''\r\n                    }\r\n                  ></a>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {item.video && item.video.src.length ? (\r\n                  <CarouselVideo src={item.video.src[0].src} type={item.video.src[0].type} />\r\n                ) : (\r\n                  <Picture\r\n                    data={{ ...item.background, maxHeight: maxHeight, maxWidth: maxWidth }}\r\n                  />\r\n                )}\r\n                {item?.text ? (\r\n                  <div\r\n                    className=\"content-slide\"\r\n                    dangerouslySetInnerHTML={{ __html: item?.text }}\r\n                  ></div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default memo(Carousel);\r\n","import PropTypes from 'prop-types';\r\nimport React, { useRef } from 'react';\r\n\r\nfunction Slide({\r\n  child,\r\n  sliderWidth,\r\n  sliderHeight,\r\n  scaleOnDrag = false,\r\n  isSquareWrapper = false,\r\n}: {\r\n  child: any;\r\n  sliderWidth: any;\r\n  sliderHeight: any;\r\n  scaleOnDrag: boolean;\r\n  isSquareWrapper: boolean;\r\n}) {\r\n  const slideRef = useRef<any>('slide');\r\n\r\n  const onMouseDown = () => {\r\n    if (scaleOnDrag) slideRef.current.style.transform = 'scale(0.9)';\r\n  };\r\n\r\n  const onMouseUp = () => {\r\n    if (scaleOnDrag) slideRef.current.style.transform = 'scale(1)';\r\n  };\r\n  return (\r\n    <section\r\n      className=\"slide-styles\"\r\n      ref={slideRef}\r\n      style={{\r\n        height: !isSquareWrapper\r\n          ? `${window.innerHeight - 192}px`\r\n          : `${slideRef.current.clientWidth}px`,\r\n      }}\r\n    >\r\n      <div\r\n        unselectable=\"on\"\r\n        className=\"slide-inner\"\r\n        style={{\r\n          width: sliderWidth ? sliderWidth : 0,\r\n          height:\r\n            sliderHeight && !isSquareWrapper\r\n              ? sliderHeight\r\n              : `${slideRef.current.clientWidth}px`,\r\n        }}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onTouchStart={onMouseDown}\r\n        onTouchEnd={onMouseUp}\r\n        onMouseLeave={onMouseUp}\r\n        onDragStart={(e) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          return false;\r\n        }}\r\n      >\r\n        {child}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nSlide.propTypes = {\r\n  child: PropTypes.element.isRequired,\r\n  sliderWidth: PropTypes.number.isRequired,\r\n  sliderHeight: PropTypes.number.isRequired,\r\n  scaleOnDrag: PropTypes.bool,\r\n};\r\n\r\nexport default Slide;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport Slide from './Slide';\r\n\r\nexport function getPositionX(event: any) {\r\n  return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;\r\n}\r\n\r\nexport function getElementDimensions(ref: any) {\r\n  const width = ref.current.clientWidth;\r\n  const height = ref.current.clientHeight;\r\n  return { width, height };\r\n}\r\n\r\nfunction Slider({\r\n  children,\r\n  onSlideComplete,\r\n  onSlideStart,\r\n  activeIndex = null,\r\n  threshHold = 100,\r\n  transition = 0.3,\r\n  scaleOnDrag = false,\r\n  isSquare = false,\r\n  dragOrAuto = false,\r\n  slideInterval = 5000,\r\n}: {\r\n  children: any;\r\n  onSlideComplete: any;\r\n  onSlideStart: any;\r\n  activeIndex: any;\r\n  threshHold: number;\r\n  transition: any;\r\n  scaleOnDrag: boolean;\r\n  isSquare: boolean;\r\n  dragOrAuto: boolean;\r\n  slideInterval?: number;\r\n}) {\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  const dragging = useRef<any>(false);\r\n  const startPos = useRef<any>(0);\r\n  const currentTranslate = useRef<any>(0);\r\n  const prevTranslate = useRef<any>(0);\r\n  const currentIndex = useRef<any>(activeIndex || 0);\r\n  const sliderRef = useRef<any>('slider');\r\n  const animationRef = useRef<any>(null);\r\n  const [btnDotClick, setBtnDotClick] = useState<boolean>(false);\r\n\r\n  const setPositionByIndex = useCallback(\r\n    (w = dimensions.width) => {\r\n      currentTranslate.current = currentIndex.current * -w;\r\n      prevTranslate.current = currentTranslate.current;\r\n      setSliderPosition();\r\n    },\r\n    [dimensions.width],\r\n  );\r\n\r\n  const transitionOn = () =>\r\n    (sliderRef.current.style.transition = `transform ${transition}s ease-out`);\r\n\r\n  const transitionOff = () => (sliderRef.current.style.transition = 'none');\r\n\r\n  // watch for a change in activeIndex prop\r\n  useEffect(() => {\r\n    if (activeIndex !== currentIndex.current) {\r\n      transitionOn();\r\n      currentIndex.current = activeIndex;\r\n      setPositionByIndex();\r\n    }\r\n  }, [activeIndex, setPositionByIndex]);\r\n\r\n  // set width after first render\r\n  // set position by startIndex\r\n  // no animation on startIndex\r\n  useLayoutEffect(() => {\r\n    const elementDimensions = getElementDimensions(sliderRef);\r\n    setDimensions(elementDimensions);\r\n\r\n    setPositionByIndex(elementDimensions.width);\r\n\r\n    if (elementDimensions.width == 0 && elementDimensions.height == 0) {\r\n      const intervalCheckWidth = setInterval(() => {\r\n        const elementDimensions = getElementDimensions(sliderRef);\r\n        setDimensions(elementDimensions);\r\n        setPositionByIndex(elementDimensions.width);\r\n      }, 100);\r\n      return () => clearInterval(intervalCheckWidth);\r\n    }\r\n  }, [setPositionByIndex]);\r\n\r\n  // add event listeners\r\n  useEffect(() => {\r\n    // set width if window resizes\r\n    const handleResize = () => {\r\n      transitionOff();\r\n      const { width, height } = getElementDimensions(sliderRef);\r\n      setDimensions({ width, height });\r\n      setPositionByIndex(width);\r\n    };\r\n\r\n    const handleKeyDown = ({ key }: { key: any }) => {\r\n      const arrowsPressed = ['ArrowRight', 'ArrowLeft'].includes(key);\r\n      if (arrowsPressed) transitionOn();\r\n      if (arrowsPressed && onSlideStart) {\r\n        onSlideStart(currentIndex.current);\r\n      }\r\n      if (key === 'ArrowRight' && currentIndex.current < children.length - 1) {\r\n        currentIndex.current += 1;\r\n      }\r\n      if (key === 'ArrowLeft' && currentIndex.current > 0) {\r\n        currentIndex.current -= 1;\r\n      }\r\n      if (arrowsPressed && onSlideComplete) onSlideComplete(currentIndex.current);\r\n      setPositionByIndex();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [children.length, setPositionByIndex, onSlideComplete, onSlideStart]);\r\n\r\n  function touchStart(index: any) {\r\n    return function (event: any) {\r\n      transitionOn();\r\n      currentIndex.current = index;\r\n      startPos.current = getPositionX(event);\r\n      dragging.current = true;\r\n      animationRef.current = requestAnimationFrame(animation);\r\n      sliderRef.current.style.cursor = 'grabbing';\r\n      // if onSlideStart prop - call it\r\n      if (onSlideStart) onSlideStart(currentIndex.current);\r\n    };\r\n  }\r\n\r\n  function touchMove(event: any) {\r\n    if (dragging.current) {\r\n      const currentPosition = getPositionX(event);\r\n      currentTranslate.current = prevTranslate.current + currentPosition - startPos.current;\r\n    }\r\n  }\r\n\r\n  function touchEnd() {\r\n    transitionOn();\r\n    cancelAnimationFrame(animationRef.current);\r\n    dragging.current = false;\r\n    const movedBy = currentTranslate.current - prevTranslate.current;\r\n\r\n    // if moved enough negative then snap to next slide if there is one\r\n    if (movedBy < -threshHold && currentIndex.current < children.length - 1)\r\n      currentIndex.current += 1;\r\n\r\n    // if moved enough positive then snap to previous slide if there is one\r\n    if (movedBy > threshHold && currentIndex.current > 0) currentIndex.current -= 1;\r\n\r\n    transitionOn();\r\n\r\n    setPositionByIndex();\r\n    sliderRef.current.style.cursor = 'grab';\r\n    // if onSlideComplete prop - call it\r\n    if (onSlideComplete) onSlideComplete(currentIndex.current);\r\n  }\r\n\r\n  function animation() {\r\n    setSliderPosition();\r\n    if (dragging.current) requestAnimationFrame(animation);\r\n  }\r\n\r\n  function setSliderPosition() {\r\n    sliderRef.current.style.transform = `translateX(${currentTranslate?.current}px)`;\r\n  }\r\n\r\n  const setIndexTransitionInterval = () => {\r\n    try {\r\n      const keyIndexInterval = activeIndex + 1 >= children.length ? 0 : activeIndex + 1;\r\n      transitionOn();\r\n      onSlideComplete(keyIndexInterval);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dragOrAuto) {\r\n      const autoSlide = () => setTimeout(setIndexTransitionInterval, slideInterval);\r\n      const auto = autoSlide();\r\n      if (btnDotClick) {\r\n        setBtnDotClick(false);\r\n        return () => {\r\n          clearTimeout(auto);\r\n        };\r\n      }\r\n    }\r\n  }, [activeIndex]);\r\n\r\n  return (\r\n    <div className={`${dragOrAuto ? 'block-slider' : 'slider-wrapper'}`}>\r\n      {dragOrAuto ? (\r\n        <>\r\n          <div className=\"slider-wrapper\">\r\n            <ul className=\"slider-styles\" ref={sliderRef}>\r\n              {children.map((child: any) => (\r\n                <li\r\n                  key={child.key}\r\n                  onContextMenu={(e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                  }}\r\n                  className=\"slide-outer\"\r\n                >\r\n                  <Slide\r\n                    child={child}\r\n                    sliderWidth={dimensions.width}\r\n                    sliderHeight={dimensions.height}\r\n                    scaleOnDrag={scaleOnDrag}\r\n                    isSquareWrapper={isSquare}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"group-dot\">\r\n            {Array.from(Array(children.length).keys()).map((item: any, index: any) => (\r\n              <div key={index} className=\"owl-page\">\r\n                <button\r\n                  className={`btn-dot ${activeIndex == index ? 'btn-dot-active' : ''}`}\r\n                  onClick={() => {\r\n                    setBtnDotClick(true);\r\n                    onSlideComplete(index);\r\n                  }}\r\n                ></button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <ul className=\"slider-styles\" ref={sliderRef}>\r\n          {children.map((child: any, index: any) => (\r\n            <li\r\n              key={child.key}\r\n              onTouchStart={touchStart(index)}\r\n              onMouseDown={touchStart(index)}\r\n              onTouchMove={touchMove}\r\n              onMouseMove={touchMove}\r\n              onTouchEnd={touchEnd}\r\n              onMouseUp={touchEnd}\r\n              onMouseLeave={() => {\r\n                if (dragging.current) touchEnd();\r\n              }}\r\n              onContextMenu={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n              }}\r\n              className=\"slide-outer\"\r\n            >\r\n              <Slide\r\n                child={child}\r\n                sliderWidth={dimensions.width}\r\n                sliderHeight={dimensions.height}\r\n                scaleOnDrag={scaleOnDrag}\r\n                isSquareWrapper={isSquare}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nSlider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  onSlideComplete: PropTypes.func,\r\n  onSlideStart: PropTypes.func,\r\n  activeIndex: PropTypes.number,\r\n  threshHold: PropTypes.number,\r\n  transition: PropTypes.number,\r\n  scaleOnDrag: PropTypes.bool,\r\n};\r\n\r\nexport default Slider;\r\n"],"sourceRoot":""}