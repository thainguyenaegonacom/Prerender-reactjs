{"version":3,"sources":["components/BlockFormField/Form.tsx","components/BlockFormField/index.tsx"],"names":["Form","config","name","useState","isSent","setIsSent","submitOnMount","useCallback","form","submit","target","action","url","method","ref","e","onLoad","Object","keys","data","map","key","type","value","split","item","index","trim","multiValueRender","JSON","stringify","memo","BlockFormField","content","formField","setForm","setSubmit","view","setView","handleChange","event","currentTarget","handleChangeCheckbox","checked","useEffect","isArray","values","dataForm","default_value","field_type","arrValue","choices","length","findIndex","clean_name","className","Picture","background","src","logo","loading","alt","dangerouslySetInnerHTML","__html","text","onSubmit","preventDefault","toastrSuccess","parseUrlAPI","htmlFor","help_text","required","AdaptiveInput","for","label","hasOwnProperty","validate","validateContent","id","onChange","row","defaultChecked","keyName","fieldType","arrValues","includes","push","filter","join","handleChangeCheckboxs","placeholder","searchable","labelField","valuesFinal","handleChangeSelectMulti","valueField","options","multi","footer"],"mappings":"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","file":"static/js/8.64a81806.chunk.js","sourcesContent":["import { trim } from 'lodash';\r\nimport React, { memo, useCallback, useState } from 'react';\r\n\r\nexport interface Config {\r\n  data: { [k: string]: any };\r\n  method: 'GET' | 'POST' | 'get' | 'post';\r\n  url: string;\r\n}\r\n\r\nexport interface FormProps {\r\n  name: string;\r\n  config: Config;\r\n}\r\n\r\nfunction Form({ config, name }: FormProps) {\r\n  const [isSent, setIsSent] = useState<boolean>(false);\r\n\r\n  const submitOnMount = useCallback(\r\n    (form?: HTMLFormElement) => {\r\n      if (!form) {\r\n        return;\r\n      }\r\n\r\n      form.submit();\r\n      setIsSent(true);\r\n    },\r\n    [setIsSent],\r\n  );\r\n\r\n  const multiValueRender = (key: string, data: any) => {\r\n    return (\r\n      <>\r\n        {data?.value.split(',').map((item: any, index: any) => {\r\n          return (\r\n            <input type={'hidden'} name={key} key={`${key}_${index}`} value={trim(item)} />\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <iframe name={name} />\r\n      {!isSent && (\r\n        <form\r\n          target={name}\r\n          action={config.url}\r\n          method={config.method}\r\n          ref={(e: any) => {\r\n            submitOnMount(e);\r\n          }}\r\n          onLoad={() => {\r\n            // console.log('Hello');\r\n          }}\r\n        >\r\n          {Object.keys(config.data).map((key) => {\r\n            if (\r\n              config.data[key].type == 'checkboxes' ||\r\n              config.data[key].type == 'multiselect'\r\n            ) {\r\n              return multiValueRender(key, config.data[key]);\r\n            }\r\n            if (config.data[key].type == 'checkbox' && config.data[key].value != 'true') {\r\n              return <></>;\r\n            }\r\n            return (\r\n              <input\r\n                type={'hidden'}\r\n                name={key}\r\n                key={key}\r\n                value={\r\n                  'string' === typeof config.data[key].value\r\n                    ? config.data[key].value\r\n                    : JSON.stringify(config.data[key].value)\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Form);\r\n","import { filter, findIndex, isArray, join, map, split, trim } from 'lodash';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport logo from '../../images/logo-collect-email.png';\r\nimport Picture from '../Picture';\r\nimport FormIFrame from './Form';\r\nimport { parseUrlAPI, toastrSuccess } from '../../redux/Helpers';\r\nimport AdaptiveInput from '../CheckoutForm/AdaptiveInput';\r\nimport Select from 'react-dropdown-select';\r\n\r\nfunction BlockFormField({\r\n  content = {},\r\n  formField = {},\r\n  url = '',\r\n}: {\r\n  content: any;\r\n  formField: any;\r\n  url: any;\r\n}) {\r\n  const [form, setForm] = useState<any>({});\r\n  const [submit, setSubmit] = useState<boolean>(false);\r\n  const [view, setView] = useState<any>(false);\r\n  const handleChange = (event: any) => {\r\n    setForm({\r\n      ...form,\r\n      [event.currentTarget.name]: {\r\n        ...form[event.currentTarget.name],\r\n        value: trim(event.target.value),\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleChangeSelect = (keyName: any, fieldType: any, value: any) => {\r\n    setForm({ ...form, [keyName]: { ...form[keyName], value: trim(value[0].name) } });\r\n  };\r\n\r\n  const handleChangeCheckbox = (event: any) => {\r\n    const value = event.target.checked ? 'true' : '';\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: { ...form[event.target.name], value: trim(value) },\r\n    });\r\n  };\r\n\r\n  const handleChangeCheckboxs = (keyName: any, fieldType: any, event: any) => {\r\n    const value = event?.target?.value;\r\n    const values = form[keyName] ? form[keyName]?.value : '';\r\n    let arrValues = split(values, ',');\r\n\r\n    if (event?.target?.checked) {\r\n      if (!arrValues.includes(value)) {\r\n        arrValues.push(value);\r\n      }\r\n    } else {\r\n      arrValues = filter(arrValues, (item: any) => item != value);\r\n    }\r\n    arrValues = filter(arrValues, (item: any) => item != '');\r\n    setForm({ ...form, [keyName]: { ...form[keyName], value: trim(join(arrValues, ',')) } });\r\n  };\r\n\r\n  const handleChangeSelectMulti = (keyName: any, fieldType: any, values: any) => {\r\n    const valuesFinal = map(values, (item: any) => {\r\n      return item?.name;\r\n    });\r\n    setForm({ ...form, [keyName]: { ...form[keyName], value: trim(join(valuesFinal, ',')) } });\r\n  };\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    // if (Object.keys(form).length == 0) {\r\n    //   toastrError('Input is required');\r\n    //   return;\r\n    // }\r\n    setView(true);\r\n    setSubmit(true);\r\n    toastrSuccess('Successfully joined');\r\n    // setView(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isArray(formField?.values)) {\r\n      const dataForm: any = {};\r\n      formField.values.map((item: any) => {\r\n        let value = item?.default_value;\r\n        if (item.field_type == 'hidden' && value == '') {\r\n          value = 'default';\r\n        }\r\n        if (item.field_type == 'radio') {\r\n          const arrValue = split(item?.choices, ',');\r\n\r\n          value = arrValue.length > 0 ? arrValue[0] : '';\r\n          if (item?.default_value != '') {\r\n            const index = findIndex(arrValue, (item: any) => item == item.default_value);\r\n            if (index != -1) {\r\n              value = arrValue[index];\r\n            }\r\n          }\r\n        }\r\n        dataForm[item?.clean_name] = {\r\n          value: value,\r\n          type: item.field_type,\r\n        };\r\n      });\r\n      setForm(dataForm);\r\n    }\r\n  }, [formField]);\r\n\r\n  return (\r\n    <section className=\"blk-form-field\">\r\n      <Picture data={content?.background} />\r\n      <div className=\"content\">\r\n        <img src={logo} loading=\"lazy\" alt=\"Sundora logotype\" />\r\n        <h3 dangerouslySetInnerHTML={{ __html: content?.text }} />\r\n        <h2 className={`${submit ? '' : 'd-none'}`}>Thank you!</h2>\r\n        <form className={`${submit ? 'd-none' : ''}`} onSubmit={handleSubmit}>\r\n          {view ? (\r\n            <div className=\"d-nonesx\">\r\n              <FormIFrame\r\n                name=\"collectEmailForm\"\r\n                config={{\r\n                  url: parseUrlAPI(url),\r\n                  method: 'post',\r\n                  data: form,\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <div className=\"rowgroup\">\r\n            {map(formField?.values, (item, index) => {\r\n              switch (item.field_type) {\r\n                case 'singleline':\r\n                case 'multiline':\r\n                case 'email':\r\n                case 'url':\r\n                case 'date':\r\n                case 'number':\r\n                  return (\r\n                    <div\r\n                      className={`form-group ${\r\n                        item.field_type == 'date' ? 'off-focus-label' : ''\r\n                      }`}\r\n                      key={index}\r\n                    >\r\n                      <label\r\n                        htmlFor={item.clean_name}\r\n                        className=\"text-help animated faster fade-in\"\r\n                      >\r\n                        {item.help_text}\r\n                        &nbsp;\r\n                        <span className=\"text-danger\">{item.required ? '*' : ''}</span>\r\n                      </label>\r\n                      <AdaptiveInput\r\n                        type={item.field_type != 'multiline' ? item.field_type : 'textarea'}\r\n                        for={item.clean_name}\r\n                        required={item.required}\r\n                        name={item.clean_name}\r\n                        label={item.help_text}\r\n                        value={\r\n                          form.hasOwnProperty(item.clean_name)\r\n                            ? form[item.clean_name]?.value\r\n                            : item.clean_name\r\n                        }\r\n                        validate={false}\r\n                        validateContent={''}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  );\r\n                case 'datetime':\r\n                  return (\r\n                    <div className=\"form-group off-focus-label\" key={index}>\r\n                      <label\r\n                        htmlFor={item.clean_name}\r\n                        className=\"text-help animated faster fade-in\"\r\n                      >\r\n                        {item.help_text}\r\n                        &nbsp;\r\n                        <span className=\"text-danger\">{item.required ? '*' : ''}</span>\r\n                      </label>\r\n                      <AdaptiveInput\r\n                        type=\"datetime-local\"\r\n                        for={item.clean_name}\r\n                        name={item.clean_name}\r\n                        label={item.help_text}\r\n                        required={item.required}\r\n                        value={\r\n                          form.hasOwnProperty(item.clean_name)\r\n                            ? form[item.clean_name]?.value\r\n                            : item.clean_name\r\n                        }\r\n                        validate={false}\r\n                        validateContent={''}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  );\r\n                case 'checkbox':\r\n                  return (\r\n                    <div className=\"form-group-radio\" key={index}>\r\n                      <label\r\n                        htmlFor={item.clean_name}\r\n                        className=\"text-help animated faster fade-in\"\r\n                      >\r\n                        {item.help_text}\r\n                        &nbsp;\r\n                        <span className=\"text-danger\">{item.required ? '*' : ''}</span>\r\n                      </label>\r\n                      <input\r\n                        type={item.field_type}\r\n                        id={item.clean_name}\r\n                        name={item.clean_name}\r\n                        value={form[item.clean_name]?.value}\r\n                        required={item.required}\r\n                        onChange={handleChangeCheckbox}\r\n                      />\r\n                      <label className=\"text-choise\" htmlFor={item.clean_name}>\r\n                        {item.choices}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                case 'radio':\r\n                case 'checkboxes':\r\n                  return (\r\n                    <div className=\"form-group-radio\" key={index}>\r\n                      <label\r\n                        htmlFor={item.clean_name}\r\n                        className=\"text-help animated faster fade-in\"\r\n                      >\r\n                        {item.help_text}\r\n                        &nbsp;\r\n                        <span className=\"text-danger\">{item.required ? '*' : ''}</span>\r\n                      </label>\r\n                      <div className=\"row p-3 pt-0\">\r\n                        {item?.choices.split(',').map((row: any, index: any) => {\r\n                          return (\r\n                            <div className=\"col-6 group-item\" key={index}>\r\n                              <input\r\n                                type={\r\n                                  item.field_type == 'checkboxes'\r\n                                    ? 'checkbox'\r\n                                    : item.field_type\r\n                                }\r\n                                id={`${item.clean_name}_${index}`}\r\n                                name={`${item.clean_name}`}\r\n                                value={row}\r\n                                defaultChecked={\r\n                                  item.field_type == 'radio' && item.required && index == 0\r\n                                    ? true\r\n                                    : false\r\n                                }\r\n                                required={\r\n                                  item.required\r\n                                    ? form[item.clean_name]?.value != ''\r\n                                      ? false\r\n                                      : true\r\n                                    : false\r\n                                }\r\n                                onChange={(event: any) => {\r\n                                  if (item.field_type == 'checkboxes') {\r\n                                    handleChangeCheckboxs(\r\n                                      item.clean_name,\r\n                                      item.field_type,\r\n                                      event,\r\n                                    );\r\n                                    return;\r\n                                  }\r\n                                  handleChange(event);\r\n                                }}\r\n                              />\r\n                              <label className=\"text-choise\" htmlFor={item.clean_name}>\r\n                                {row}\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                case 'hidden':\r\n                  return (\r\n                    <div className=\"form-group\" key={index}>\r\n                      <AdaptiveInput\r\n                        type=\"hidden\"\r\n                        for=\"\"\r\n                        name={item.clean_name}\r\n                        label=\"\"\r\n                        required={item.required}\r\n                        value={item.default_value}\r\n                        validate={false}\r\n                        validateContent={''}\r\n                        handleChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  );\r\n\r\n                case 'dropdown':\r\n                case 'multiselect':\r\n                  return (\r\n                    <div className=\"form-group select-group\" key={index}>\r\n                      <label\r\n                        htmlFor={item.clean_name}\r\n                        className=\"text-help animated faster fade-in\"\r\n                      >\r\n                        {item.help_text}\r\n                        &nbsp;\r\n                        <span className=\"text-danger\">{item.required ? '*' : ''}</span>\r\n                      </label>\r\n                      <Select\r\n                        placeholder=\"Select\"\r\n                        className=\"primary-select\"\r\n                        name={item.clean_name}\r\n                        required={item.required}\r\n                        searchable={false}\r\n                        labelField=\"name\"\r\n                        onChange={(event: any) => {\r\n                          if (item.field_type == 'multiselect') {\r\n                            handleChangeSelectMulti(item.clean_name, item.field_type, event);\r\n                            return;\r\n                          }\r\n                          handleChangeSelect(item.clean_name, item.field_type, event);\r\n                        }}\r\n                        valueField=\"name\"\r\n                        options={item?.choices.split(',').map((item: any, index: any) => {\r\n                          return {\r\n                            id: index,\r\n                            name: item,\r\n                          };\r\n                        })}\r\n                        multi={item.field_type == 'multiselect' ? true : false}\r\n                        values={[]}\r\n                      />\r\n                    </div>\r\n                  );\r\n              }\r\n            })}\r\n          </div>\r\n          <p dangerouslySetInnerHTML={{ __html: content?.footer }} className=\"footer\" />\r\n          <button type=\"submit\" className=\"btn-submit\" value=\"Submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n        {/* )} */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default memo(BlockFormField);\r\n"],"sourceRoot":""}